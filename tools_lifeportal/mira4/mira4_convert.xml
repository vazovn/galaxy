<tool id="mira_4_0_convert" name="MIRA miraconvert (4.0.2)" version="4.0.2">
    <description>Convert MIRA assembly to FASTA/SAM/BAM</description>
    <requirements>
        <requirement type="binary">miraconvert</requirement>
        <requirement type="package" version="4.0">MIRA</requirement>
    </requirements>

    <command>
module load galaxy-scripts;
module load mira/4.0.2;
module load samtools/1.0;
mira4_convert.py
--input "$mira_file"
--min_length $min_length
--min_cover $min_cover
--min_reads $min_reads
#if str($maf_wanted)=="true":
--maf "$out_maf"
#end if
#if str($fasta_wanted)=="true":
--fasta "$out_fasta"
#end if
#if str($bam_wanted)=="true":
--bam "$out_bam"
#end if
##Don't yet have a Galaxy datatype defined for ace:
## #if str($ace_wanted)=="true":
## --ace "$out_ace"
## #end if
#if str($cstats_wanted)=="true":
--cstats "$out_cstats"
#end if
    </command>
    <stdio>
        <!-- Assume anything other than zero is an error -->
        <exit_code range="1:" />
        <exit_code range=":-1" />
    </stdio>
    <inputs>
        <param name="mira_file" type="data" format="mira" required="true" label="MIRA Assembly Format input" />
        <!-- TODO - top level select for contig versus read output? Or two Galaxy tools in different XML files? -->
        <param name="min_length" type="integer" required="false" value="0" min="0"
               label="Minimum contig length"
               help="e.g. Set to 1000 to exclude small contigs. Default is to keep all contigs (minimum zero)" />
        <param name="min_cover" type="integer" required="false" value="0" min="0"
               label="Minimum average contig coverage"
               help="e.g. Set to 10 to exclude low coverage contigs. Default is to keep all contigs (minimum zero)" />
        <param name="min_reads" type="integer" required="false" value="0" min="0"
               label="Minimum reads per contig"
               help="e.g. Set to 5 to exclude low coverage contigs with only a few reads. Default is to keep all contigs (minimum zero)." />
        <param name="maf_wanted" type="boolean" label="Output assembly in MIRA's own format? (useful if filtering)" checked="False" />
        <param name="fasta_wanted" type="boolean" label="Convert assembly into (unpadded) FASTA?" checked="True" />
        <param name="bam_wanted" type="boolean" label="Convert assembly into (upadded) BAM format?" checked="False" />
        <!-- Don't yet have a Galaxy datatype defined for ace:
        <param name="ace_wanted" type="boolean" label="Convert assembly in ACE format?" checked="False" />
        -->
        <param name="cstats_wanted" type="boolean" label="Assembly statistics file?" checked="False" />
    </inputs>
    <outputs>
        <data name="out_maf" format="mira" label="$mira_file.name (filtered)">
              <filter>maf_wanted is True</filter>
        </data>
        <data name="out_fasta" format="fasta" label="$mira_file.name (as FASTA)">
              <filter>fasta_wanted is True</filter>
        </data>
        <data name="out_bam" format="bam" label="$mira_file.name (as BAM)">
              <filter>bam_wanted is True</filter>
        </data>
        <!--
        <data name="out_ace" format="ace" label="$mira_file.name (as ACE)">
            <filter>ace_wanted is True</filter>
        </data>
        -->
        <data name="out_cstats" format="tabular" label="$mira_file.name (filtered stats)">
              <filter>cstats_wanted is True</filter>
        </data>
    </outputs>
    <tests>
        <!-- TODO -->
    </tests>
    <help>
**What it does**

Runs the ``miraconvert`` utility from MIRA v4.0 to filter and/or convert
a MIRA Assembly Format file produced by a *mapping* or *de novo* assembly.

**Example Usage**

You want to remove all the low coverage contigs from a transcriptome
assembly to focus on those with higher coverage.

You want to convert your MIRA assembly into SAM/BAM to run a standard
SNP finding tool.

You've lost the FASTA consensus from your MIRA assembly and need to
regenerate it.


**Citation**

If you use this Galaxy tool in work leading to a scientific publication please
cite the following papers:

Peter J.A. Cock, Björn A. Grüning, Konrad Paszkiewicz and Leighton Pritchard (2013).
Galaxy tools and workflows for sequence analysis with applications
in molecular plant pathology. PeerJ 1:e167
http://dx.doi.org/10.7717/peerj.167

Bastien Chevreux, Thomas Wetter and Sándor Suhai (1999).
Genome Sequence Assembly Using Trace Signals and Additional Sequence Information.
Computer Science and Biology: Proceedings of the German Conference on Bioinformatics (GCB) 99, pp. 45-56.
http://www.bioinfo.de/isb/gcb99/talks/chevreux/main.html

This wrapper is available to install into other Galaxy Instances via the Galaxy
Tool Shed at http://toolshed.g2.bx.psu.edu/view/peterjc/mira4_assembler
    </help>
</tool>
