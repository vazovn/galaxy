<tool id="bowtie2" name="Bowtie2 (2.2.2)" version="2.2.2">
    <!-- Wrapper compatible with Bowtie version 2.0.0 -->
    <description>is a short-read aligner</description>
    <requirements>
        <requirement type="package">bowtie2</requirement>
        <requirement type="package">samtools</requirement>
    </requirements>
    <command>
        module load samtools/1.0;
        module load bowtie2/2.2.2;
        module load galaxy-scripts;
        bowtie2_wrapper.py
        
        ## Change this to accommodate the number of threads you have available.
        --num-threads="8"

        ## Outputs.
        --output=$output

        #if str( $singlePaired.sPaired ) == "single"
            #if $output_unaligned_reads_l
                --output_unaligned_reads=$output_unaligned_reads_l
            #end if
        #else
            #if $output_unaligned_reads_l and $output_unaligned_reads_r
                --output_unaligned_reads_l=$output_unaligned_reads_l
                --output_unaligned_reads_r=$output_unaligned_reads_r
            #end if
        #end if
        
        ## Handle reference file.
        #if $refGenomeSource.genomeSource == "history":
            --own-file=$refGenomeSource.ownFile
        #else:
            --indexes-path="${refGenomeSource.index.fields.path}"
        #end if

        ## Are reads single-end or paired?
        --single-paired=$singlePaired.sPaired

        ## First input file always required.
        --input1=$input1
        
        ## Second input only if input is paired-end.
        #if $singlePaired.sPaired == "paired"
            --input2=$singlePaired.input2
            -I $singlePaired.minInsert
            -X $singlePaired.maxInsert
        #end if

        ## Set params.
        --settings=$params.settingsType
        
        #if $params.settingsType == "full":
            #if str($params.align_type) == "end_to_end":
                --end-to-end --preset-alignment=$params.preset.align_preset_select
            #else:
                --local --preset-alignment=$params.preset.align_preset_select-local
            #end if
        #end if

        ## Read group information.
        #if $readGroup.specReadGroup == "yes"
          --rgid="$readGroup.rgid"
          --rglb="$readGroup.rglb"
          --rgpl="$readGroup.rgpl"
          --rgsm="$readGroup.rgsm"
        #end if
    </command>
    <inputs>
        <conditional name="singlePaired">
            <param name="sPaired" type="select" label="Is this library mate-paired?">
              <option value="single">Single-end</option>
              <option value="paired">Paired-end</option>
            </param>
            <when value="single">
                <param format="fastq" name="input1" type="data" label="FASTQ file" help="Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33"/>
            </when>
            <when value="paired">
                <param format="fastq" name="input1" type="data" label="FASTQ file" help="Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33" />
                <param format="fastqsanger" name="input2" type="data" label="FASTQ file" help="Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33" />
                <!-- TODO: paired-end specific parameters. -->
                <param name="minInsert" type="integer" value="0" label="Minimum insert size for valid paired-end alignments" />
                <param name="maxInsert" type="integer" value="250" label="Maximum insert size for valid paired-end alignments" />
            </when>
        </conditional>
        <param name="unalignedFile" type="boolean" truevalue="true" falsevalue="false" checked="False" label="Write all reads that could not be aligned to a file (uses --un for single-end and  --un-conc for paired-ends)" />
        <conditional name="refGenomeSource">
          <param name="genomeSource" type="select" label="Will you select a reference genome from your history or use a built-in index?" help="Built-ins were indexed using default options">
            <option value="indexed">Use a built-in index</option>
            <option value="history">Use one from the history</option>
          </param>
          <when value="indexed">
            <param name="index" type="select" label="Select a reference genome" help="If your genome of interest is not listed, contact the Galaxy team">
              <options from_data_table="bowtie2_indexes">
                <filter type="sort_by" column="2"/>
                <validator type="no_options" message="No indexes are available for the selected input dataset"/>
              </options>
            </param>
          </when>
          <when value="history">
            <param name="ownFile" type="data" format="fasta" metadata_name="dbkey" label="Select the reference genome" />
          </when>  <!-- history -->
        </conditional>  <!-- refGenomeSource -->
        <conditional name="params">
            <param name="settingsType" type="select" label="Parameter Settings" help="You can use the default settings or set custom values for any of Bowtie's parameters.">
              <option value="preSet">Use Defaults</option>
              <option value="full">Full parameter list</option>
            </param>
            <when value="preSet" />
            <!-- Full/advanced params. -->
            <when value="full">
                <param name="align_type" type="select" label="Type of alignment">
                    <option selected="true" value="end_to_end">End to end</option>
                    <option value="local">Local</option>
                </param>
                <conditional name="preset">
                    <param name="b2_preset" type="select" label="Use Preset options">
                          <option selected="true" value="Yes">Yes</option>
                          <option value="No">No</option>
                    </param>
                    <when value="Yes">
                        <param name="align_preset_select" type="select" label="Preset option">
                            <option value="very-fast">Very fast</option>
                            <option value="fast">Fast</option>
                            <option selected="true" value="sensitive">Sensitive</option>
                            <option value="very-sensitive">Very sensitive</option>
                        </param>
                    </when>
                    <when value="No" />
                </conditional>
            </when>  <!-- full -->
      </conditional>  <!-- params -->
      <conditional name="readGroup">
            <param name="specReadGroup" type="select" label="Specify the read group for this file?">
                <option value="yes">Yes</option>
                <option value="no" selected="True">No</option>
            </param>
            <when value="yes">
                <param name="rgid" type="text" size="25" label="Read group identiﬁer (ID). Each @RG line must have a unique ID. The value of ID is used in the RG tags of alignment records. Must be unique among all read groups in header section." help="Required if RG specified. Read group IDs may be modiﬁed when merging SAM ﬁles in order to handle collisions." />
                <param name="rglb" type="text" size="25" label="Library name (LB)" help="Required if RG specified" />
                <param name="rgpl" type="text" size="25" label="Platform/technology used to produce the reads (PL)" help="Required if RG specified. Valid values : CAPILLARY, LS454, ILLUMINA, SOLID, HELICOS, IONTORRENT and PACBIO" />
                <param name="rgsm" type="text" size="25" label="Sample (SM)" help="Required if RG specified. Use pool name where a pool is being sequenced" />
            </when>
            <when value="no" />
        </conditional> <!-- readGroup -->
    </inputs>

    <outputs>
        <data format="fastqsanger" name="output_unaligned_reads_l" label="${tool.name} on ${on_string}: unaligned reads (L)" >
            <filter>unalignedFile is True</filter>
            <actions>
                <action type="format">
                    <option type="from_param" name="singlePaired.input1" param_attribute="ext" />
                </action>
            </actions>
        </data>
        <data format="fastqsanger" name="output_unaligned_reads_r" label="${tool.name} on ${on_string}: unaligned reads (R)">
            <filter>singlePaired['sPaired'] == "paired" and unalignedFile is True</filter>
            <actions>
                <action type="format">
                    <option type="from_param" name="singlePaired.input1" param_attribute="ext" />
                </action>
            </actions>
        </data>
        <data format="bam" name="output" label="${tool.name} on ${on_string}: aligned reads">
          <actions>
            <conditional name="refGenomeSource.genomeSource">
              <when value="indexed">
                <action type="metadata" name="dbkey">
                  <option type="from_data_table" name="bowtie2_indexes" column="1" offset="0">
                    <filter type="param_value" column="0" value="#" compare="startswith" keep="False"/>
                    <filter type="param_value" ref="refGenomeSource.index" column="0"/>
                  </option>
                </action>
              </when>
              <when value="history">
                <action type="metadata" name="dbkey">
                  <option type="from_param" name="refGenomeSource.ownFile" param_attribute="dbkey" />
                </action>
              </when>
            </conditional>
          </actions>
        </data>
    </outputs>

    <tests>
    </tests>

    <help>

**Job params**: Bowtie is threaded, use 8 for "Number of CPUs per node".

**About Bowtie**
Bowtie 2 is an ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences. It is particularly good at aligning reads of about 50 up to 100s or 1,000s of characters to relatively long (e.g. mammalian) genomes. Bowtie 2 indexes the genome with an FM Index (based on the Burrows-Wheeler Transform or BWT) to keep its memory footprint small: for the human genome, its memory footprint is typically around 3.2 gigabytes of RAM. Bowtie 2 supports gapped, local, and paired-end alignment modes. Multiple processors can be used simultaneously to achieve greater alignment speed. Bowtie 2 outputs alignments in SAM format, enabling interoperation with a large number of other tools (e.g. SAMtools, GATK) that use SAM. Bowtie 2 is distributed under the GPLv3 license, and it runs on the command line under Windows, Mac OS X and Linux.

Bowtie 2 is often the first step in pipelines for comparative genomics, including for variation calling, ChIP-seq, RNA-seq, BS-seq. Bowtie 2 and Bowtie (also called "Bowtie 1" here) are also tightly integrated into some tools, including TopHat: a fast splice junction mapper for RNA-seq reads, Cufflinks: a tool for transcriptome assembly and isoform quantitiation from RNA-seq reads, Crossbow: a cloud-enabled software tool for analyzing reseuqncing data, and Myrna: a cloud-enabled software tool for aligning RNA-seq reads and measuring differential gene expression.

**Input**: FASTQ file

**Home page**: http://bowtie-bio.sourceforge.net/bowtie2/index.shtml

    </help>
</tool>
